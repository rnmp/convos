<article class="<%= 'active ' if notice == convo.id %><%= @convo ? 'single-convo' : 'convo' %> _group" data-weighted-score="<%= convo.weighted_score %>">
  <div class="user-content">
    <%= highlight markdown(convo.convo), params[:search] %>
  </div>
  <p class="metadata">
    <span class="vote-links<%= " disabled" if current_user && current_user.voted_on?(convo) %>">
      <%= link_to 'upvote', (current_user.voted_on?(convo) ? 'javascript:;' : upvote_convo_path(convo)), remote: (true unless current_user.voted_on?(convo)), 
        class: 'upvote'+(' active' if current_user && current_user.voted_for?(convo)).to_s, 
        data: { item_type: convo.class.to_s.downcase, item_id: convo.id } %>
      <%= link_to 'downvote', (current_user.voted_on?(convo) ? 'javascript:;' : downvote_convo_path(convo)), remote: (true unless current_user.voted_on?(convo)), 
        class: 'downvote'+(' active' if current_user && current_user.voted_against?(convo)).to_s, 
        data: { item_type: convo.class.to_s.downcase, item_id: convo.id } %>
    </span>
    <%= link_to_unless @convo, pluralized_points_for(convo), convo %> |
    <% unless @convo %>
      <%= link_to pluralized_comments_for(convo), convo %> |
    <% end %>
    <%= link_to_unless @convo, (time_ago_in_words convo.created_at)+' ago', convo %>
    <% if convo.created_at.to_s != convo.updated_at.to_s %>
      <abbr title="<%= time_ago_in_words convo.updated_at %> ago"> (edited)</abbr>
    <% end %>
    by <% if convo.author? %><%= convo.author %><% else %>someone<% end %> 
    <% if convo.user && convo.user == current_user %>
      | <%= link_to 'edit', edit_convo_path(convo) %> 
      | <%= link_to 'delete', convo, :method => :delete %>
    <% end %>
  </p>
</article>